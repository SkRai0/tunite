{"version":3,"sources":["Components/Song.jsx","Components/Player.jsx","data.js","Components/LibrarySongs.jsx","Components/Library.jsx","Components/nav.jsx","App.js","reportWebVitals.js","index.js"],"names":["Song","currentSong","className","alt","name","src","cover","artist","Player","setSongs","setCurrentSong","songs","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","useEffect","newSong","map","currSong","id","active","timeModifier","time","Math","floor","slice","skipHandler","direction","a","currentIndex","findIndex","so","length","current","play","currentTime","onChange","e","target","value","min","max","duration","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","songList","audio","uuidv4","color","LibrarySong","song","selectSongHandler","Library","libVis","setLibVis","NavBar","faMusic","App","useRef","useState","timeChangeHandler","songEndHandler","onEnded","onLoadedMetadata","onTimeUpdate","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAYeA,EAVF,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACX,OACI,sBAAKC,UAAU,eAAf,UACI,qBAAKC,IAAKF,EAAYG,KAAMC,IAAKJ,EAAYK,QAC7C,6BAAKL,EAAYG,OACjB,6BAAKH,EAAYM,a,cC2EdC,EA9EA,SAAC,GAA8G,IAA7GC,EAA4G,EAA5GA,SAAUC,EAAkG,EAAlGA,eAAgBC,EAAkF,EAAlFA,MAAOV,EAA2E,EAA3EA,YAAaW,EAA8D,EAA9DA,UAAWC,EAAmD,EAAnDA,aAAcC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,SAE3GC,qBAAU,WACN,IAAMC,EAAUP,EAAMQ,KAAI,SAACC,GACvB,OAAGA,EAASC,KAAOpB,EAAYoB,GAC3B,2BACOD,GADP,IAEIE,QAAQ,IAKZ,2BACOF,GADP,IAEIE,QAAQ,OAIpBb,EAASS,KAEV,CAACjB,IAEJ,IAUMsB,EAAe,SAACC,GAClB,OACIC,KAAKC,MAAMF,EAAK,IAAM,KAAO,IAAMC,KAAKC,MAAMF,EAAK,KAAKG,OAAO,IASjEC,EAAW,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDACZC,EAAepB,EAAMqB,WAAU,SAACC,GAAD,OAAQA,EAAGZ,KAAOpB,EAAYoB,MAChD,SAAdQ,EAFa,gCAINnB,EAAeC,GAAOoB,EAAa,GAAKpB,EAAMuB,SAJxC,UAMC,SAAdL,EANa,qBAQPE,EAAa,GAAKpB,EAAMuB,UAAa,EAR9B,iCAUFxB,EAAeC,EAAMA,EAAMuB,OAAS,IAVlC,cAWLtB,GAAWE,EAASqB,QAAQC,OAXvB,4CAcN1B,EAAeC,GAAOoB,EAAa,GAAKpB,EAAMuB,SAdxC,QAgBbtB,GAAWE,EAASqB,QAAQC,OAhBf,4CAAH,sDAmBjB,OACI,sBAAKlC,UAAU,SAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,4BAAIqB,EAAaP,EAASqB,eAC1B,uBAAOC,SA5BC,SAACC,GACjBzB,EAASqB,QAAQE,YAAcE,EAAEC,OAAOC,MACxC1B,EAAY,2BAAIC,GAAL,IAAeqB,YAAcE,EAAEC,OAAOC,UA0BXC,IAAK,EAAGC,IAAK3B,EAAS4B,SAAUH,MAAOzB,EAASqB,YAAaQ,KAAK,QAAQzC,KAAK,gBAC7G,4BAAImB,EAAaP,EAAS4B,UAAY,QAE1C,sBAAK1C,UAAU,kBAAf,UACI,cAAC,IAAD,CAAiB4C,QAAS,kBAAMlB,EAAY,SAASxB,KAAK,OAAO2C,KAAK,KAAKC,KAAMC,MACjF,cAAC,IAAD,CAAiBH,QAjDL,WACjBlC,GACCE,EAASqB,QAAQe,QACjBrC,GAAcD,KAEdE,EAASqB,QAAQC,OACjBvB,GAAcD,KA2CiCR,KAAK,OAAO2C,KAAK,KAAKC,KAAMpC,EAAYuC,IAAUC,MAC7F,cAAC,IAAD,CAAiBN,QAAS,kBAAMlB,EAAY,SAASxB,KAAK,OAAO2C,KAAK,KAAKC,KAAMK,a,QCNlFC,EApEE,WACb,MAAO,CACH,CACIlD,KAAM,WACNE,MAAO,0JACPC,OAAQ,WACRgD,MAAO,mJACPlC,GAAImC,cACJlC,QAAQ,EACRmC,MAAO,CAAC,UAAU,YAEtB,CACIrD,KAAM,gBACNE,MAAO,4KACPC,OAAQ,2BACRgD,MAAO,uMACPlC,GAAImC,cACJlC,QAAQ,EACRmC,MAAO,CAAC,UAAU,YAEtB,CACIrD,KAAM,sBACNE,MAAO,qLACPC,OAAQ,2BACRgD,MAAO,iNACPlC,GAAImC,cACJlC,QAAQ,EACRmC,MAAO,CAAC,UAAU,YAEtB,CACIrD,KAAM,4BACNE,MAAO,qLACPC,OAAQ,iBACRgD,MAAO,0KACPlC,GAAImC,cACJlC,QAAQ,EACRmC,MAAO,CAAC,UAAU,YAEtB,CACIrD,KAAM,kBACNE,MAAO,8KACPC,OAAQ,oCACRgD,MAAO,kNACPlC,GAAImC,cACJlC,QAAQ,EACRmC,MAAO,CAAC,UAAU,YAEtB,CACIrD,KAAM,SACNE,MAAO,gKACPC,OAAQ,eACRgD,MAAO,6JACPlC,GAAImC,cACJlC,QAAQ,EACRmC,MAAO,CAAC,UAAU,YAEtB,CACIrD,KAAM,qBACNE,MAAO,gKACPC,OAAQ,aACRgD,MAAO,uLACPlC,GAAImC,cACJlC,QAAQ,EACRmC,MAAO,CAAC,UAAU,cC7BfC,EAlCK,SAAC,GAAqE,IAApErC,EAAmE,EAAnEA,GAAIX,EAA+D,EAA/DA,eAAgBiD,EAA+C,EAA/CA,KAAM7C,EAAyC,EAAzCA,SAAUF,EAA+B,EAA/BA,UAAWD,EAAoB,EAApBA,MAAOF,EAAa,EAAbA,SAClEmD,EAAiB,uCAAG,4BAAA9B,EAAA,sEAChBpB,EAAeiD,GADC,OAGhBzC,EAAUP,EAAMQ,KAAI,SAACC,GACvB,OAAGA,EAASC,KAAOA,EACf,2BACOD,GADP,IAEIE,QAAQ,IAKZ,2BACOF,GADP,IAEIE,QAAQ,OAIpBb,EAASS,GACNN,GAAWE,EAASqB,QAAQC,OAnBT,2CAAH,qDAsBvB,OACI,sBAAKU,QAASc,EAAmB1D,UAAS,uBAAkByD,EAAKrC,OAAS,WAAa,IAAvF,UACI,qBAAKnB,IAAKwD,EAAKvD,KAAMC,IAAKsD,EAAKrD,QAC/B,sBAAKJ,UAAU,YAAf,UACI,6BAAKyD,EAAKvD,OACV,6BAAKuD,EAAKpD,gBCbXsD,EAbC,SAAC,GAA8E,IAA7EC,EAA4E,EAA5EA,OAAmBpD,GAAyD,EAApEqD,UAAoE,EAAzDrD,gBAAgBC,EAAyC,EAAzCA,MAAOG,EAAkC,EAAlCA,SAAUF,EAAwB,EAAxBA,UAAWH,EAAa,EAAbA,SAC7E,OACI,sBAAKP,UAAS,kBAAa4D,EAAS,UAAY,IAAhD,UACI,yCACI,qBAAK5D,UAAU,gBAAf,SACKS,EAAMQ,KAAI,SAACwC,GAAD,OACP,cAAC,EAAD,CAAatC,GAAMsC,EAAKtC,GAAIV,MAAOA,EAAOF,SAAUA,EAAUG,UAAWA,EAAWE,SAAUA,EAA0BJ,eAAgBA,EAAiBiD,KAAQA,GAAlDA,EAAKtC,aCM7H2C,EAZA,SAAC,GAAwB,IAAvBF,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,UACrB,OACI,sBAAK7D,UAAU,MAAf,UACI,wCACA,yBAAQ4C,QAAS,kBAAMiB,GAAWD,IAAlC,oBAEI,cAAC,IAAD,CAAiBd,KAAMiB,aCkCxBC,MApCf,WAEE,IAAMpD,EAAWqD,iBAAO,MAExB,EAA4BC,oBAAS,GAArC,mBAAON,EAAP,KAAeC,EAAf,KACA,EAA0BK,mBAASd,KAAnC,mBAAO3C,EAAP,KAAcF,EAAd,KACA,EAAsC2D,mBAASzD,EAAM,IAArD,mBAAOV,EAAP,KAAoBS,EAApB,KACA,EAAkC0D,oBAAS,GAA3C,mBAAOxD,EAAP,KAAkBC,EAAlB,KACA,EAAgCuD,mBAAS,CACrC/B,YAAa,EACbO,SAAU,IAFd,mBAAO5B,EAAP,KAAiBD,EAAjB,KAKMsD,EAAoB,SAAC9B,GACvB,IAAMJ,EAAUI,EAAEC,OAAOH,YACnBO,EAAWL,EAAEC,OAAOI,SAC1B7B,EAAY,2BAAIC,GAAL,IAAeqB,YAAYF,EAAUS,eAG9C0B,EAAc,uCAAG,4BAAAxC,EAAA,6DACjBC,EAAepB,EAAMqB,WAAU,SAACC,GAAD,OAAQA,EAAGZ,KAAOpB,EAAYoB,MAD5C,SAEfX,EAAeC,GAAOoB,EAAa,GAAKpB,EAAMuB,SAF/B,OAGlBtB,GAAWE,EAASqB,QAAQC,OAHV,2CAAH,qDAMpB,OACE,sBAAKlC,UAAS,cAAS4D,EAAS,iBAAmB,IAAnD,UACE,cAAC,EAAD,CAAQA,OAAQA,EAAQC,UAAWA,IACnC,cAAC,EAAD,CAAM9D,YAAaA,IACnB,cAAC,EAAD,CAAQQ,SAAUA,EAAUC,eAAgBA,EAAgBC,MAAOA,EAAOK,SAAUA,EAAUD,YAAaA,EAAaD,SAAUA,EAAWF,UAAWA,EAAWC,aAAcA,EAAcZ,YAAaA,IAC5M,cAAC,EAAD,CAAS6D,OAAQA,EAAQC,UAAWA,EAAWtD,SAAUA,EAAUG,UAAWA,EAAWE,SAAUA,EAAUJ,eAAgBA,EAAgBC,MAAOA,IACpJ,uBAAO4D,QAASD,EAAgBE,iBAAkBH,EAAmBI,aAAcJ,EAAmBK,IAAK5D,EAAUT,IAAKJ,EAAYsD,YC3B7HoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4266ce82.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Song = ({currentSong}) => {\r\n    return(\r\n        <div className=\"song-details\">\r\n            <img alt={currentSong.name} src={currentSong.cover} />\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Song;","import React, {useEffect} from \"react\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPlay , faAngleLeft , faAngleRight, faPause} from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nconst Player = ({setSongs, setCurrentSong, songs, currentSong, isPlaying, setIsPlaying, audioRef, setSongInfo, songInfo}) => {\r\n\r\n    useEffect(() => {\r\n        const newSong = songs.map((currSong) =>{\r\n            if(currSong.id === currentSong.id){\r\n                return{\r\n                    ...currSong,\r\n                    active: true\r\n                }\r\n            }\r\n            else\r\n            {\r\n                return{\r\n                    ...currSong,\r\n                    active: false\r\n                }\r\n            }\r\n        })\r\n        setSongs(newSong);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentSong])\r\n\r\n    const songPlayHandler = () =>{\r\n        if(isPlaying){\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        }else{\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    }\r\n\r\n    const timeModifier = (time) =>{\r\n        return(\r\n            Math.floor(time/60) + \":\" + (\"0\" + Math.floor(time%60)).slice(-2)\r\n        )\r\n    }\r\n\r\n    const dragHandler = (e) =>{\r\n        audioRef.current.currentTime = e.target.value;\r\n        setSongInfo({...songInfo, currentTime : e.target.value})\r\n    }\r\n\r\n    const skipHandler = async (direction) =>{\r\n        let currentIndex = songs.findIndex((so) => so.id === currentSong.id);\r\n        if(direction === \"next\")\r\n        {\r\n            await setCurrentSong(songs[(currentIndex+1) % songs.length]);\r\n        }\r\n        if(direction === \"prev\")\r\n        {\r\n            if(((currentIndex-1) % songs.length) === -1)\r\n            {\r\n                await setCurrentSong(songs[songs.length - 1]);\r\n                if(isPlaying) audioRef.current.play();\r\n                return;\r\n            }\r\n            await setCurrentSong(songs[(currentIndex-1) % songs.length]);\r\n        }\r\n        if(isPlaying) audioRef.current.play();\r\n    }\r\n\r\n    return(\r\n        <div className=\"player\">\r\n            <div className=\"time-controller\">\r\n                <p>{timeModifier(songInfo.currentTime)}</p>\r\n                <input onChange={dragHandler} min={0} max={songInfo.duration} value={songInfo.currentTime} type=\"range\" name=\"song-timing\"/>\r\n                <p>{timeModifier(songInfo.duration || 0)}</p>\r\n            </div>\r\n            <div className=\"play-controller\">\r\n                <FontAwesomeIcon onClick={() => skipHandler(\"prev\")} name=\"prev\" size=\"2x\" icon={faAngleLeft}/>\r\n                <FontAwesomeIcon onClick={songPlayHandler} name=\"play\" size=\"2x\" icon={isPlaying ? faPause : faPlay}/>\r\n                <FontAwesomeIcon onClick={() => skipHandler(\"next\")} name=\"next\" size=\"2x\" icon={faAngleRight}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst songList = () =>{\r\n    return [\r\n        {\r\n            name: \"Payphone\",\r\n            cover: \"https://firebasestorage.googleapis.com/v0/b/tunite-47e92.appspot.com/o/Covers%2FPayphone-Icon.jfif?alt=media&token=e79e0ce1-8586-41fa-b895-b34b8daf2e1d\",\r\n            artist: \"Maroon 5\",\r\n            audio: \"https://firebasestorage.googleapis.com/v0/b/tunite-47e92.appspot.com/o/Songs%2FPayphone.mp3?alt=media&token=702c4fc9-1a5e-4d2f-a9d5-b839a1fee0f7\",\r\n            id: uuidv4(),\r\n            active: true,\r\n            color: ['#770F9C','#EC4EB0']\r\n        },\r\n        {\r\n            name: \"Call You Mine\",\r\n            cover: \"https://firebasestorage.googleapis.com/v0/b/tunite-47e92.appspot.com/o/Covers%2FThe_Chainsmokers_-_Call_You_Mine.png?alt=media&token=d0ff7fe1-fc65-443c-b44d-e3b105b31b5a\",\r\n            artist: \"Chainsmokers, Babe Rexha\",\r\n            audio: \"https://firebasestorage.googleapis.com/v0/b/tunite-47e92.appspot.com/o/Songs%2FThe-Chainsmokers-Call-You-Mine-Official-Video-ft.-Bebe-Rexha.mp3?alt=media&token=c0dbfd3b-2cf8-4373-a35e-ed62fd4c36df\",\r\n            id: uuidv4(),\r\n            active: false,\r\n            color: ['#2A2945','#ECCD91']\r\n        },\r\n        {\r\n            name: \"In The Name Of Love\",\r\n            cover: \"https://firebasestorage.googleapis.com/v0/b/tunite-47e92.appspot.com/o/Covers%2Fab67616d0000b2738c77bcf5f5a227d270d23370.jfif?alt=media&token=bcb51c9b-cfc4-45e3-a01a-82232930924a\",\r\n            artist: \"Martin Garix, Babe Rexha\",\r\n            audio: \"https://firebasestorage.googleapis.com/v0/b/tunite-47e92.appspot.com/o/Songs%2FMartin-Garrix-Bebe-Rexha-In-The-Name-of-Love-(englishsongs.wapkiz.com).mp3?alt=media&token=4d30a379-9df1-433d-bfee-2e9f2fcbdd3b\",\r\n            id: uuidv4(),\r\n            active: false,\r\n            color: ['#2A2945','#ECCD91']\r\n        },\r\n        {\r\n            name: \"DJ Got Us Fallin' In Love\",\r\n            cover: \"https://firebasestorage.googleapis.com/v0/b/tunite-47e92.appspot.com/o/Covers%2Fab67616d0000b27386b0c9728ad3ed338eaeea79.jfif?alt=media&token=5145e26c-3f0f-4d59-a451-e1786de6df2d\",\r\n            artist: \"Usher, Pitbull\",\r\n            audio: \"https://firebasestorage.googleapis.com/v0/b/tunite-47e92.appspot.com/o/Songs%2Fusher-dj-got-us-falling-in-love.mp3?alt=media&token=890f22d3-6573-46b0-8e7a-9878e8db20af\",\r\n            id: uuidv4(),\r\n            active: false,\r\n            color: ['#2A2945','#ECCD91']\r\n        },\r\n        {\r\n            name: \"Who Do You Love\",\r\n            cover: \"https://firebasestorage.googleapis.com/v0/b/tunite-47e92.appspot.com/o/Covers%2FThe_Chainsmokers_-_Who_Do_You_Love.png?alt=media&token=a4ad1d0e-ab4b-4069-b14c-03117fe933b6\",\r\n            artist: \"Chainsmokers, 5 seconds of summer\",\r\n            audio: \"https://firebasestorage.googleapis.com/v0/b/tunite-47e92.appspot.com/o/Songs%2FThe-Chainsmokers-Who-Do-You-Love-Official-Video-ft.-5-Seconds-of-Summer.mp3?alt=media&token=7434cbdc-05d6-428c-845c-84866441a088\",\r\n            id: uuidv4(),\r\n            active: false,\r\n            color: ['#2A2945','#ECCD91']\r\n        },\r\n        {\r\n            name: \"Tigini\",\r\n            cover: \"https://firebasestorage.googleapis.com/v0/b/tunite-47e92.appspot.com/o/Covers%2Fcrop_480x480_4305455.jpg?alt=media&token=7ea63d26-87c1-4715-8a29-8ffc65de8c33\",\r\n            artist: \"Kikimotelaba\",\r\n            audio: \"https://firebasestorage.googleapis.com/v0/b/tunite-47e92.appspot.com/o/Songs%2FTigini(PagalWorld).mp3?alt=media&token=edcaaa57-ee0e-474b-8fbd-f824da4e102f\",\r\n            id: uuidv4(),\r\n            active: false,\r\n            color: ['#2A2945','#ECCD91']\r\n        },\r\n        {\r\n            name: \"You Broke Me First\",\r\n            cover: \"https://firebasestorage.googleapis.com/v0/b/tunite-47e92.appspot.com/o/Covers%2Fcrop_480x480_3121608.jpg?alt=media&token=93ea936d-7afa-4d00-9b95-2d568417dbb6\",\r\n            artist: \"Tate McRae\",\r\n            audio: \"https://firebasestorage.googleapis.com/v0/b/tunite-47e92.appspot.com/o/Songs%2FTate-McRae-you-broke-me-first-Official-Video.mp3?alt=media&token=25d86236-f458-4d89-8e94-9e59fe11f444\",\r\n            id: uuidv4(),\r\n            active: false,\r\n            color: ['#2A2945','#ECCD91']\r\n        }\r\n    ]\r\n}\r\n\r\nexport default songList;","import React from \"react\";\r\n\r\nconst LibrarySong = ({id, setCurrentSong, song, audioRef, isPlaying, songs, setSongs}) =>{\r\n    const selectSongHandler = async () =>{\r\n        await setCurrentSong(song);\r\n\r\n        const newSong = songs.map((currSong) =>{\r\n            if(currSong.id === id){\r\n                return{\r\n                    ...currSong,\r\n                    active: true\r\n                }\r\n            }\r\n            else\r\n            {\r\n                return{\r\n                    ...currSong,\r\n                    active: false\r\n                }\r\n            }\r\n        })\r\n        setSongs(newSong);\r\n        if(isPlaying) audioRef.current.play();\r\n    }\r\n\r\n    return(\r\n        <div onClick={selectSongHandler} className={`library-song ${song.active ? 'selected' : ''}`}>\r\n            <img alt={song.name} src={song.cover} />\r\n            <div className=\"song-info\">\r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LibrarySong;","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySongs\";\r\n\r\n\r\nconst Library = ({libVis, setLibVis, setCurrentSong, songs, audioRef, isPlaying, setSongs}) =>{\r\n    return(\r\n        <div className={`library ${libVis ? 'visible' : ''}`}>\r\n            <h2>Library</h2>\r\n                <div className=\"library-songs\">\r\n                    {songs.map((song) => (\r\n                        <LibrarySong id = {song.id} songs={songs} setSongs={setSongs} isPlaying={isPlaying} audioRef={audioRef} key = {song.id} setCurrentSong={setCurrentSong}  song = {song} />\r\n                    ))}\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Library","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NavBar = ({libVis, setLibVis}) =>{\r\n    return(\r\n        <div className=\"nav\">\r\n            <h2>Tunite</h2>\r\n            <button onClick={() => setLibVis(!libVis)}>\r\n                Library\r\n                <FontAwesomeIcon icon={faMusic} />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React, { useState , useRef } from \"react\";\nimport './styles/App.scss';\nimport Song from \"./Components/Song\";\nimport Player from \"./Components/Player\";\nimport songList from \"./data\";\nimport Library from \"./Components/Library\";\nimport NavBar from \"./Components/nav\";\n\nfunction App() {\n\n  const audioRef = useRef(null);\n\n  const [libVis, setLibVis] = useState(false);\n  const [songs, setSongs] = useState(songList());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n      currentTime: 0,\n      duration: 0\n  })\n\n  const timeChangeHandler = (e) =>{\n      const current = e.target.currentTime;\n      const duration = e.target.duration;\n      setSongInfo({...songInfo, currentTime:current , duration})\n  }\n\n  const songEndHandler = async() =>{\n    let currentIndex = songs.findIndex((so) => so.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex+1) % songs.length]);\n    if(isPlaying) audioRef.current.play();\n  }\n\n  return (\n    <div className={`App ${libVis ? \"library-active\" : \"\"}`}>\n      <NavBar libVis={libVis} setLibVis={setLibVis} />\n      <Song currentSong={currentSong}/>\n      <Player setSongs={setSongs} setCurrentSong={setCurrentSong} songs={songs} songInfo={songInfo} setSongInfo={setSongInfo} audioRef={audioRef}  isPlaying={isPlaying} setIsPlaying={setIsPlaying} currentSong={currentSong} />\n      <Library libVis={libVis} setLibVis={setLibVis} setSongs={setSongs} isPlaying={isPlaying} audioRef={audioRef} setCurrentSong={setCurrentSong} songs={songs} />\n      <audio onEnded={songEndHandler} onLoadedMetadata={timeChangeHandler} onTimeUpdate={timeChangeHandler} ref={audioRef} src={currentSong.audio}></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}